[{"D:\\projects\\epam\\memoryGame\\src\\index.tsx":"1","D:\\projects\\epam\\memoryGame\\src\\App.tsx":"2","D:\\projects\\epam\\memoryGame\\src\\reducers\\index.ts":"3","D:\\projects\\epam\\memoryGame\\src\\components\\Loader.tsx":"4","D:\\projects\\epam\\memoryGame\\src\\utils\\preloadImages.js":"5","D:\\projects\\epam\\memoryGame\\src\\containers\\index.js":"6","D:\\projects\\epam\\memoryGame\\src\\components\\index.js":"7","D:\\projects\\epam\\memoryGame\\src\\containers\\Menu.js":"8","D:\\projects\\epam\\memoryGame\\src\\containers\\Rules.js":"9","D:\\projects\\epam\\memoryGame\\src\\components\\Header.js":"10","D:\\projects\\epam\\memoryGame\\src\\components\\GroupCard.js":"11","D:\\projects\\epam\\memoryGame\\src\\containers\\GamePage.js":"12","D:\\projects\\epam\\memoryGame\\src\\components\\Footer.js":"13","D:\\projects\\epam\\memoryGame\\src\\containers\\Settings.tsx":"14","D:\\projects\\epam\\memoryGame\\src\\actions\\actions.ts":"15","D:\\projects\\epam\\memoryGame\\src\\actions\\actionTypes\\actionTypes.ts":"16","D:\\projects\\epam\\memoryGame\\src\\containers\\ChooseCardsThemes.tsx":"17","D:\\projects\\epam\\memoryGame\\src\\utils\\useTheme.js":"18","D:\\projects\\epam\\memoryGame\\src\\reducers\\memory.ts":"19","D:\\projects\\epam\\memory-game\\client\\src\\index.tsx":"20","D:\\projects\\epam\\memory-game\\client\\src\\App.tsx":"21","D:\\projects\\epam\\memory-game\\client\\src\\reducers\\index.ts":"22","D:\\projects\\epam\\memory-game\\client\\src\\utils\\preloadImages.js":"23","D:\\projects\\epam\\memory-game\\client\\src\\reducers\\settings.ts":"24","D:\\projects\\epam\\memory-game\\client\\src\\containers\\index.ts":"25","D:\\projects\\epam\\memory-game\\client\\src\\components\\index.ts":"26","D:\\projects\\epam\\memory-game\\client\\src\\assets\\images\\cats\\index.js":"27","D:\\projects\\epam\\memory-game\\client\\src\\assets\\images\\architecture\\index.js":"28","D:\\projects\\epam\\memory-game\\client\\src\\assets\\images\\winter\\index.js":"29","D:\\projects\\epam\\memory-game\\client\\src\\services\\storage.ts":"30","D:\\projects\\epam\\memory-game\\client\\src\\containers\\Menu.tsx":"31","D:\\projects\\epam\\memory-game\\client\\src\\containers\\Rules.tsx":"32","D:\\projects\\epam\\memory-game\\client\\src\\containers\\Settings.tsx":"33","D:\\projects\\epam\\memory-game\\client\\src\\containers\\GamePage.tsx":"34","D:\\projects\\epam\\memory-game\\client\\src\\containers\\ChooseCardsThemes.tsx":"35","D:\\projects\\epam\\memory-game\\client\\src\\components\\Footer.tsx":"36","D:\\projects\\epam\\memory-game\\client\\src\\components\\Header.tsx":"37","D:\\projects\\epam\\memory-game\\client\\src\\components\\Card.tsx":"38","D:\\projects\\epam\\memory-game\\client\\src\\components\\Loader.tsx":"39","D:\\projects\\epam\\memory-game\\client\\src\\components\\FinalModal.tsx":"40","D:\\projects\\epam\\memory-game\\client\\src\\components\\GroupCard.tsx":"41","D:\\projects\\epam\\memory-game\\client\\src\\components\\Board.tsx":"42","D:\\projects\\epam\\memory-game\\client\\src\\actions\\actionTypes\\index.ts":"43","D:\\projects\\epam\\memory-game\\client\\src\\utils\\gameUtils.ts":"44","D:\\projects\\epam\\memory-game\\client\\src\\utils\\getImage.ts":"45","D:\\projects\\epam\\memory-game\\client\\src\\thunks\\settings.ts":"46","D:\\projects\\epam\\memory-game\\client\\src\\components\\LinkButton.tsx":"47","D:\\projects\\epam\\memory-game\\client\\src\\components\\Modal.tsx":"48","D:\\projects\\epam\\memory-game\\client\\src\\components\\PlaySoundButton.tsx":"49","D:\\projects\\epam\\memory-game\\client\\src\\actions\\actionTypes\\settings.ts":"50","D:\\projects\\epam\\memory-game\\client\\src\\actions\\index.ts":"51","D:\\projects\\epam\\memory-game\\client\\src\\actions\\settings.ts":"52","D:\\projects\\epam\\memory-game\\client\\src\\config.ts":"53","D:\\projects\\epam\\memory-game\\client\\src\\containers\\Score.tsx":"54","D:\\projects\\epam\\memory-game\\client\\src\\reducers\\scores.ts":"55","D:\\projects\\epam\\memory-game\\client\\src\\actions\\actionTypes\\scores.ts":"56","D:\\projects\\epam\\memory-game\\client\\src\\actions\\scores.ts":"57","D:\\projects\\epam\\memory-game\\client\\src\\thunks\\scores.ts":"58"},{"size":861,"mtime":1613922384565,"results":"59","hashOfConfig":"60"},{"size":1966,"mtime":1613936060198,"results":"61","hashOfConfig":"60"},{"size":142,"mtime":1613936350117,"results":"62","hashOfConfig":"60"},{"size":1470,"mtime":1610840944000,"results":"63","hashOfConfig":"60"},{"size":687,"mtime":1613904030218,"results":"64","hashOfConfig":"60"},{"size":243,"mtime":1613936316946,"results":"65","hashOfConfig":"60"},{"size":177,"mtime":1613915341553,"results":"66","hashOfConfig":"60"},{"size":1877,"mtime":1613930758083,"results":"67","hashOfConfig":"60"},{"size":2242,"mtime":1613935905267,"results":"68","hashOfConfig":"60"},{"size":640,"mtime":1613936296854,"results":"69","hashOfConfig":"60"},{"size":1313,"mtime":1613936437514,"results":"70","hashOfConfig":"60"},{"size":7005,"mtime":1613936530064,"results":"71","hashOfConfig":"60"},{"size":1530,"mtime":1613934529446,"results":"72","hashOfConfig":"60"},{"size":135,"mtime":1613912832959,"results":"73","hashOfConfig":"60"},{"size":283,"mtime":1613933981201,"results":"74","hashOfConfig":"60"},{"size":124,"mtime":1544784792000,"results":"75","hashOfConfig":"60"},{"size":3431,"mtime":1613923286664,"results":"76","hashOfConfig":"60"},{"size":427,"mtime":1613915905947,"results":"77","hashOfConfig":"60"},{"size":771,"mtime":1613935001899,"results":"78","hashOfConfig":"60"},{"size":888,"mtime":1614526141798,"results":"79","hashOfConfig":"80"},{"size":2522,"mtime":1614532588033,"results":"81","hashOfConfig":"80"},{"size":213,"mtime":1614537403276,"results":"82","hashOfConfig":"80"},{"size":730,"mtime":1614526141806,"results":"83","hashOfConfig":"80"},{"size":633,"mtime":1614526141801,"results":"84","hashOfConfig":"80"},{"size":287,"mtime":1614535397574,"results":"85","hashOfConfig":"80"},{"size":306,"mtime":1614526141787,"results":"86","hashOfConfig":"80"},{"size":258,"mtime":1614526141757,"results":"87","hashOfConfig":"80"},{"size":384,"mtime":1614526141748,"results":"88","hashOfConfig":"80"},{"size":300,"mtime":1614526141770,"results":"89","hashOfConfig":"80"},{"size":964,"mtime":1614526141802,"results":"90","hashOfConfig":"80"},{"size":877,"mtime":1614611994553,"results":"91","hashOfConfig":"80"},{"size":1441,"mtime":1614526141793,"results":"92","hashOfConfig":"80"},{"size":9266,"mtime":1614611936372,"results":"93","hashOfConfig":"80"},{"size":5644,"mtime":1614626515310,"results":"94","hashOfConfig":"80"},{"size":2904,"mtime":1614526141791,"results":"95","hashOfConfig":"80"},{"size":1977,"mtime":1614526141782,"results":"96","hashOfConfig":"80"},{"size":989,"mtime":1614526141784,"results":"97","hashOfConfig":"80"},{"size":2264,"mtime":1614526141781,"results":"98","hashOfConfig":"80"},{"size":611,"mtime":1614526141785,"results":"99","hashOfConfig":"80"},{"size":5685,"mtime":1614623525840,"results":"100","hashOfConfig":"80"},{"size":1841,"mtime":1614526141783,"results":"101","hashOfConfig":"80"},{"size":2300,"mtime":1614526141780,"results":"102","hashOfConfig":"80"},{"size":56,"mtime":1614537403306,"results":"103","hashOfConfig":"80"},{"size":369,"mtime":1614526141805,"results":"104","hashOfConfig":"80"},{"size":961,"mtime":1614526141805,"results":"105","hashOfConfig":"80"},{"size":376,"mtime":1614526141804,"results":"106","hashOfConfig":"80"},{"size":2217,"mtime":1614609255330,"results":"107","hashOfConfig":"80"},{"size":1237,"mtime":1614612074005,"results":"108","hashOfConfig":"80"},{"size":1533,"mtime":1614608843136,"results":"109","hashOfConfig":"80"},{"size":51,"mtime":1614526141724,"results":"110","hashOfConfig":"80"},{"size":56,"mtime":1614584680059,"results":"111","hashOfConfig":"80"},{"size":217,"mtime":1614526141725,"results":"112","hashOfConfig":"80"},{"size":362,"mtime":1614585288083,"results":"113","hashOfConfig":"80"},{"size":3682,"mtime":1614621786623,"results":"114","hashOfConfig":"80"},{"size":1142,"mtime":1614621688193,"results":"115","hashOfConfig":"80"},{"size":278,"mtime":1614538426842,"results":"116","hashOfConfig":"80"},{"size":275,"mtime":1614619431181,"results":"117","hashOfConfig":"80"},{"size":1461,"mtime":1614621443230,"results":"118","hashOfConfig":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v29jp",{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"1oywra7",{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"162"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"162"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"162"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"162"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"162"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\epam\\memoryGame\\src\\index.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\App.tsx",["245","246","247","248","249"],"import React, {FC, useCallback, useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {Header, Footer, Loader} from \"./components\";\nimport {IState} from \"./common/types\";\nimport {Dispatch} from \"redux\";\nimport { Menu, Rules, Settings, GamePage, ChooseCardsThemes } from \"./containers\";\nimport imageArray from \"./utils/preloadImages\";\n\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        preloadImage();\n    }, []);\n\n    const preloadImage = () => {\n        setLoading(true);\n        const images = imageArray();\n        let length = images.length;\n        images.forEach((picture) => {\n            const img = new Image();\n            img.src = picture;\n            img.onload = () => {\n                --length;\n                if (length <= 0) {\n                    setLoading(false);\n                }\n            };\n        });\n    };\n\n    return (\n        <>\n            <Router>\n            <div>\n                <Header/>\n                {(loading) ? (<Loader/>) : (\n                    <Switch>\n                        <Route path='/' exact component={Menu}/>\n                        <Route path='/chooseCards' component={ChooseCardsThemes}/>\n                        <Route path='/gameRules' component={Rules}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/game' component={GamePage}/>\n                    </Switch>\n                )}\n                <Footer/>\n            </div>\n        </Router>\n        </>\n    );\n};\n\nexport default App;\n\n// const mapStateToProps = (state: IState) => ({\n//     errorMessage: state.toast.message,\n// });\n\n// const mapDispatchToProps = (dispatch: Dispatch) => ({\n//     onResetToast: () => dispatch(resetToastMessage()),\n// });\n\n// export const App = connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n","D:\\projects\\epam\\memoryGame\\src\\reducers\\index.ts",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Loader.tsx",[],["250","251"],"D:\\projects\\epam\\memoryGame\\src\\utils\\preloadImages.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Menu.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Rules.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Header.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\GroupCard.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\GamePage.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Footer.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Settings.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\actions\\actions.ts",["252"],"import { FLIP_CARD, RESTART_GAME, MATCH_CARDS } from './actionTypes/actionTypes';\n\n// export const flipCard = index => ({\n// \ttype: FLIP_CARD,\n// \tindex,\n// });\n\nexport const matchCards = () => ({\n\ttype: MATCH_CARDS,\n});\n\nexport const restartGame = () => ({\n\ttype: RESTART_GAME,\n});\n","D:\\projects\\epam\\memoryGame\\src\\actions\\actionTypes\\actionTypes.ts",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\ChooseCardsThemes.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\utils\\useTheme.js",[],"D:\\projects\\epam\\memoryGame\\src\\reducers\\memory.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\index.tsx",[],["253","254"],"D:\\projects\\epam\\memory-game\\client\\src\\App.tsx",["255","256","257","258"],"import React, {FC, useCallback, useEffect, useState} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {Header, Footer, Loader} from \"./components\";\r\nimport {IState} from \"./common/types\";\r\nimport {Dispatch} from \"redux\";\r\nimport { Menu, Rules, Settings, Score, GamePage, ChooseCardsThemes } from \"./containers\";\r\nimport imageArray from \"./utils/preloadImages\";\r\n// @ts-ignore\r\nimport fonSound from './assets/sounds/fon.mp3';\r\n// @ts-ignore\r\nimport buttonSound from './assets/sounds/buttonSound.mp3';\r\nimport {config} from './config';\r\n\r\nconst App: FC = () => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        console.log(config);\r\n        preloadImage();\r\n    }, []);\r\n\r\n    const preloadImage = () => {\r\n        setLoading(true);\r\n        const images = imageArray();\r\n        let length = images.length;\r\n        images.forEach((picture) => {\r\n            const img = new Image();\r\n            img.src = picture;\r\n            img.onload = () => {\r\n                --length;\r\n                if (length <= 0) {\r\n                    setLoading(false);\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {(loading) ? (<Loader/>) : (\r\n                <Router>\r\n                    <div>\r\n                        <Header/>\r\n\r\n                        <Switch>\r\n                            <Route path='/' exact component={Menu}/>\r\n                            <Route path='/chooseCards' component={ChooseCardsThemes}/>\r\n                            <Route path='/gameRules' component={Rules}/>\r\n                            <Route path='/score' component={Score}/>\r\n                            <Route path='/settings' component={Settings}/>\r\n                            <Route path='/game' component={GamePage}/>\r\n                        </Switch>\r\n\r\n                        <Footer/>\r\n                        <audio id=\"music\" src={fonSound} />\r\n                        <audio id=\"buttonSound\" src={buttonSound} />\r\n                    </div>\r\n                </Router>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n// const mapStateToProps = (state: IState) => ({\r\n//     errorMessage: state.toast.message,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch) => ({\r\n//     onResetToast: () => dispatch(resetToastMessage()),\r\n// });\r\n\r\n// export const App = connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","D:\\projects\\epam\\memory-game\\client\\src\\reducers\\index.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\utils\\preloadImages.js",[],["259","260"],"D:\\projects\\epam\\memory-game\\client\\src\\reducers\\settings.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\containers\\index.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\index.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\assets\\images\\cats\\index.js",[],"D:\\projects\\epam\\memory-game\\client\\src\\assets\\images\\architecture\\index.js",[],"D:\\projects\\epam\\memory-game\\client\\src\\assets\\images\\winter\\index.js",[],"D:\\projects\\epam\\memory-game\\client\\src\\services\\storage.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\containers\\Menu.tsx",["261","262","263"],"import React, {FC, useCallback, useRef, useState} from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinkButton from \"../components/LinkButton\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst Menu:FC = () => {\r\n\r\n    return (\r\n        <main>\r\n            <Modal title='Welcome' >\r\n                    <Grid container\r\n                          direction=\"column\"\r\n                          justify=\"center\"\r\n                          alignItems=\"center\">\r\n                        <LinkButton to={\"/chooseCards\"} text={\"New Game\"} />\r\n                        <LinkButton to={\"/score\"} text={\"High Score\"} />\r\n                        <LinkButton to={\"/gameRules\"} text={\"Rules\"} />\r\n                        <LinkButton to={\"/settings\"} text={\"Settings\"} />\r\n                    </Grid>\r\n            </Modal>\r\n        </main>\r\n    );\r\n};\r\nexport default Menu;\r\n","D:\\projects\\epam\\memory-game\\client\\src\\containers\\Rules.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\containers\\Settings.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\containers\\GamePage.tsx",["264","265","266"],"D:\\projects\\epam\\memory-game\\client\\src\\containers\\ChooseCardsThemes.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\Footer.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\Header.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\Card.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\Loader.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\FinalModal.tsx",["267","268","269","270"],"D:\\projects\\epam\\memory-game\\client\\src\\components\\GroupCard.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\Board.tsx",["271","272","273"],"import React, {FC, useMemo} from \"react\";\r\nimport { Card } from \"../components\";\r\nimport {Theme, makeStyles, createStyles, createMuiTheme, Grid} from \"@material-ui/core\";\r\n\r\ninterface IBoardProps {\r\n    cards: Array<{id:number, type:string}>;\r\n    flipped: Array<number>;\r\n    solved: Array<number>;\r\n    onClick: (id: number) => void;\r\n    disabled: boolean;\r\n\r\n}\r\nconst Board:FC<IBoardProps> = (props: IBoardProps) => {\r\n    const { cards, flipped, onClick, disabled, solved } = props;\r\n    const classes = useStyles();\r\n\r\n    const series = useMemo(() => {\r\n        const half = splitIntoHalf(cards);\r\n        const quatar_1 = splitIntoHalf(half.first);\r\n        const quatar_2 = splitIntoHalf(half.second);\r\n        return [\r\n            quatar_1.first,\r\n            quatar_1.second,\r\n            quatar_2.first,\r\n            quatar_2.second,\r\n        ]\r\n    }, [cards]);\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n            {series.map((seriesItem, index) => (\r\n                <Grid container item key={`series-${index}`} xs={12} md={6} justify={\"space-around\"} className={classes.gridItem}>\r\n                    {seriesItem.map((card) => (\r\n                        <Grid item key={card.id} xs={4} md={2} >\r\n                            <Card\r\n                                id={card.id}\r\n                                type={card.type}\r\n                                width={100}\r\n                                height={150}\r\n                                flipped={flipped.includes(card.id)}\r\n                                solved={solved.includes(card.id)}\r\n                                onClick={onClick}\r\n                                disabled={disabled || solved.includes(card.id)}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst splitIntoHalf = (array: any[]) => {\r\n    const half = Math.ceil(array.length / 2);\r\n    return {\r\n        first: array.splice(0, half),\r\n        second: array.splice(-half),\r\n    };\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    board:{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n    },\r\n    gridItem:{\r\n        textAlign: 'center',\r\n    },\r\n\r\n});\r\n\r\nexport default Board;\r\n","D:\\projects\\epam\\memory-game\\client\\src\\actions\\actionTypes\\index.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\utils\\gameUtils.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\utils\\getImage.ts",["274"],"import { winter1, winter2, winter3, winter4, winter5, winter6} from \"../assets/images/winter\";\r\nimport { architecture1, architecture3, architecture4, architecture5, architecture6, architecture8 } from \"../assets/images/architecture\";\r\nimport { cat1, cat3, cat4, cat5, cat6, cat8 } from \"../assets/images/cats\";\r\n\r\nconst getImage = (type: string) => {\r\n    let image = \"\";\r\n\r\n    const store = {\r\n        \"sin\": winter1,\r\n        \"vet\": winter2,\r\n        \"yellow\": winter3,\r\n        \"sun\": winter4,\r\n        \"shar\": winter5,\r\n        \"bike\": winter6,\r\n        \"white\": architecture1,\r\n        \"blue\": architecture3,\r\n        \"york\": architecture4,\r\n        \"orange\": architecture5,\r\n        \"sad\": architecture6,\r\n        \"stairs\": architecture8,\r\n        \"siam\": cat1,\r\n        \"whcat\": cat3,\r\n        \"rusg\": cat4,\r\n        \"tree\": cat5,\r\n        \"kun\": cat6,\r\n        \"eyes\": cat8,\r\n    };\r\n\r\n    return (store as any)[type];\r\n};\r\n\r\nexport default getImage;\r\n","D:\\projects\\epam\\memory-game\\client\\src\\thunks\\settings.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\LinkButton.tsx",["275","276"],"import React, {FC, useCallback, useRef} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n// @ts-ignore\r\nimport buttonSound from \"../assets/sounds/buttonSound.mp3\";\r\nimport {ISettings, IState} from \"../common/types\";\r\nimport {connect} from \"react-redux\";\r\n\r\ninterface IRedux {\r\n    storageSettings: ISettings;\r\n}\r\n\r\ninterface ILinkProps {\r\n    text: string;\r\n    to: string;\r\n}\r\ntype IProps = ILinkProps & IRedux;\r\n\r\nconst LinkButtonContainer: FC<IProps> = (props: IProps) => {\r\n    const {text, to, storageSettings} = props;\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const handleClick = useCallback(() => {\r\n        const audio = document.querySelector(\"#buttonSound\") as HTMLAudioElement;\r\n        if(storageSettings.enableSounds){\r\n            audio.play();\r\n        }\r\n        setTimeout(() => {\r\n            history.push(to);\r\n        }, 250);\r\n    }, [history, to, storageSettings]);\r\n\r\n    return (\r\n        <>\r\n            <button className={classes.button} onClick={handleClick} >\r\n                {text}\r\n            </button>\r\n        </>\r\n    );\r\n};\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        marginBottom:'1.5rem',\r\n        fontSize: '1.8rem',\r\n        padding: '1rem 7rem',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        alignItems: 'center',\r\n        backgroundImage: 'linear-gradient(120deg, #3a7bd5, #00d2ff)',\r\n        cursor: 'pointer',\r\n        transition: 'all 0.3s',\r\n        fontFamily: 'Reggae One',\r\n        width: '80%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '0 auto',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n            boxShadow: '0 1rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n        },\r\n        '&:focus': {\r\n            outline: 0,\r\n            boxShadow: '0 1rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n        },\r\n        '&:active': {\r\n            transform: 'scale(1)',\r\n        },\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state: IState) => ({\r\n    storageSettings: state.settings.settings,\r\n});\r\n\r\nconst LinkButton = connect(mapStateToProps)(LinkButtonContainer);\r\n\r\nexport default LinkButton;\r\n","D:\\projects\\epam\\memory-game\\client\\src\\components\\Modal.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\components\\PlaySoundButton.tsx",[],"D:\\projects\\epam\\memory-game\\client\\src\\actions\\actionTypes\\settings.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\actions\\index.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\actions\\settings.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\config.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\containers\\Score.tsx",["277","278","279"],"D:\\projects\\epam\\memory-game\\client\\src\\reducers\\scores.ts",["280"],"D:\\projects\\epam\\memory-game\\client\\src\\actions\\actionTypes\\scores.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\actions\\scores.ts",[],"D:\\projects\\epam\\memory-game\\client\\src\\thunks\\scores.ts",[],{"ruleId":"281","severity":1,"message":"282","line":1,"column":16,"nodeType":"283","messageId":"284","endLine":1,"endColumn":18},{"ruleId":"281","severity":1,"message":"285","line":1,"column":20,"nodeType":"283","messageId":"284","endLine":1,"endColumn":31},{"ruleId":"281","severity":1,"message":"286","line":3,"column":9,"nodeType":"283","messageId":"284","endLine":3,"endColumn":16},{"ruleId":"281","severity":1,"message":"287","line":5,"column":9,"nodeType":"283","messageId":"284","endLine":5,"endColumn":15},{"ruleId":"281","severity":1,"message":"288","line":6,"column":9,"nodeType":"283","messageId":"284","endLine":6,"endColumn":17},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"281","severity":1,"message":"293","line":1,"column":10,"nodeType":"283","messageId":"284","endLine":1,"endColumn":19},{"ruleId":"289","replacedBy":"294"},{"ruleId":"291","replacedBy":"295"},{"ruleId":"281","severity":1,"message":"285","line":1,"column":20,"nodeType":"283","messageId":"284","endLine":1,"endColumn":31},{"ruleId":"281","severity":1,"message":"286","line":3,"column":9,"nodeType":"283","messageId":"284","endLine":3,"endColumn":16},{"ruleId":"281","severity":1,"message":"287","line":5,"column":9,"nodeType":"283","messageId":"284","endLine":5,"endColumn":15},{"ruleId":"281","severity":1,"message":"288","line":6,"column":9,"nodeType":"283","messageId":"284","endLine":6,"endColumn":17},{"ruleId":"289","replacedBy":"294"},{"ruleId":"291","replacedBy":"295"},{"ruleId":"281","severity":1,"message":"285","line":1,"column":20,"nodeType":"283","messageId":"284","endLine":1,"endColumn":31},{"ruleId":"281","severity":1,"message":"296","line":1,"column":33,"nodeType":"283","messageId":"284","endLine":1,"endColumn":39},{"ruleId":"281","severity":1,"message":"297","line":1,"column":41,"nodeType":"283","messageId":"284","endLine":1,"endColumn":49},{"ruleId":"281","severity":1,"message":"298","line":1,"column":37,"nodeType":"283","messageId":"284","endLine":1,"endColumn":47},{"ruleId":"281","severity":1,"message":"299","line":4,"column":9,"nodeType":"283","messageId":"284","endLine":4,"endColumn":16},{"ruleId":"281","severity":1,"message":"300","line":24,"column":12,"nodeType":"283","messageId":"284","endLine":24,"endColumn":21},{"ruleId":"281","severity":1,"message":"301","line":2,"column":10,"nodeType":"283","messageId":"284","endLine":2,"endColumn":20},{"ruleId":"281","severity":1,"message":"302","line":3,"column":21,"nodeType":"283","messageId":"284","endLine":3,"endColumn":26},{"ruleId":"281","severity":1,"message":"303","line":3,"column":28,"nodeType":"283","messageId":"284","endLine":3,"endColumn":41},{"ruleId":"281","severity":1,"message":"304","line":18,"column":18,"nodeType":"283","messageId":"284","endLine":18,"endColumn":25},{"ruleId":"281","severity":1,"message":"302","line":3,"column":9,"nodeType":"283","messageId":"284","endLine":3,"endColumn":14},{"ruleId":"281","severity":1,"message":"305","line":3,"column":28,"nodeType":"283","messageId":"284","endLine":3,"endColumn":40},{"ruleId":"281","severity":1,"message":"306","line":3,"column":42,"nodeType":"283","messageId":"284","endLine":3,"endColumn":56},{"ruleId":"281","severity":1,"message":"307","line":6,"column":9,"nodeType":"283","messageId":"284","endLine":6,"endColumn":14},{"ruleId":"281","severity":1,"message":"296","line":1,"column":33,"nodeType":"283","messageId":"284","endLine":1,"endColumn":39},{"ruleId":"281","severity":1,"message":"308","line":5,"column":8,"nodeType":"283","messageId":"284","endLine":5,"endColumn":19},{"ruleId":"281","severity":1,"message":"309","line":2,"column":9,"nodeType":"283","messageId":"284","endLine":2,"endColumn":15},{"ruleId":"281","severity":1,"message":"310","line":4,"column":17,"nodeType":"283","messageId":"284","endLine":4,"endColumn":26},{"ruleId":"281","severity":1,"message":"311","line":21,"column":12,"nodeType":"283","messageId":"284","endLine":21,"endColumn":28},{"ruleId":"281","severity":1,"message":"312","line":1,"column":9,"nodeType":"283","messageId":"284","endLine":1,"endColumn":18},"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'connect' is defined but never used.","'IState' is defined but never used.","'Dispatch' is defined but never used.","no-native-reassign",["313"],"no-negated-in-lhs",["314"],"'FLIP_CARD' is defined but never used.",["313"],["314"],"'useRef' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'Storage' is defined but never used.","'isRunning' is assigned a value but never used.","'GiBackstab' is defined but never used.","'Theme' is defined but never used.","'ThemeProvider' is defined but never used.","'setOpen' is assigned a value but never used.","'createStyles' is defined but never used.","'createMuiTheme' is defined but never used.","'image' is assigned a value but never used.","'buttonSound' is defined but never used.","'config' is defined but never used.","'ISettings' is defined but never used.","'isScoresFetching' is assigned a value but never used.","'ADD_SCORE' is defined but never used.","no-global-assign","no-unsafe-negation"]