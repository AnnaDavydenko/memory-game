[{"D:\\projects\\epam\\memoryGame\\src\\index.tsx":"1","D:\\projects\\epam\\memoryGame\\src\\App.tsx":"2","D:\\projects\\epam\\memoryGame\\src\\reducers\\index.ts":"3","D:\\projects\\epam\\memoryGame\\src\\components\\Loader.tsx":"4","D:\\projects\\epam\\memoryGame\\src\\utils\\preloadImages.js":"5","D:\\projects\\epam\\memoryGame\\src\\containers\\index.js":"6","D:\\projects\\epam\\memoryGame\\src\\components\\index.js":"7","D:\\projects\\epam\\memoryGame\\src\\containers\\Menu.js":"8","D:\\projects\\epam\\memoryGame\\src\\containers\\Rules.js":"9","D:\\projects\\epam\\memoryGame\\src\\components\\Header.js":"10","D:\\projects\\epam\\memoryGame\\src\\components\\GroupCard.js":"11","D:\\projects\\epam\\memoryGame\\src\\containers\\GamePage.js":"12","D:\\projects\\epam\\memoryGame\\src\\components\\Footer.js":"13","D:\\projects\\epam\\memoryGame\\src\\containers\\Settings.tsx":"14","D:\\projects\\epam\\memoryGame\\src\\actions\\actions.ts":"15","D:\\projects\\epam\\memoryGame\\src\\actions\\actionTypes\\actionTypes.ts":"16","D:\\projects\\epam\\memoryGame\\src\\containers\\ChooseCardsThemes.tsx":"17","D:\\projects\\epam\\memoryGame\\src\\utils\\useTheme.js":"18","D:\\projects\\epam\\memoryGame\\src\\reducers\\memory.ts":"19","D:\\projects\\epam\\memory-game\\src\\index.tsx":"20","D:\\projects\\epam\\memory-game\\src\\App.tsx":"21","D:\\projects\\epam\\memory-game\\src\\reducers\\index.ts":"22","D:\\projects\\epam\\memory-game\\src\\utils\\preloadImages.js":"23","D:\\projects\\epam\\memory-game\\src\\assets\\images\\cats\\index.js":"24","D:\\projects\\epam\\memory-game\\src\\assets\\images\\winter\\index.js":"25","D:\\projects\\epam\\memory-game\\src\\assets\\images\\architecture\\index.js":"26","D:\\projects\\epam\\memory-game\\src\\components\\Loader.tsx":"27","D:\\projects\\epam\\memory-game\\src\\containers\\ChooseCardsThemes.tsx":"28","D:\\projects\\epam\\memory-game\\src\\containers\\Settings.tsx":"29","D:\\projects\\epam\\memory-game\\src\\components\\LinkButton.tsx":"30","D:\\projects\\epam\\memory-game\\src\\components\\Modal.tsx":"31","D:\\projects\\epam\\memory-game\\src\\components\\PlaySoundButton.tsx":"32","D:\\projects\\epam\\memory-game\\src\\components\\Footer.tsx":"33","D:\\projects\\epam\\memory-game\\src\\components\\Header.tsx":"34","D:\\projects\\epam\\memory-game\\src\\containers\\index.ts":"35","D:\\projects\\epam\\memory-game\\src\\components\\index.ts":"36","D:\\projects\\epam\\memory-game\\src\\containers\\Rules.tsx":"37","D:\\projects\\epam\\memory-game\\src\\containers\\Menu.tsx":"38","D:\\projects\\epam\\memory-game\\src\\components\\GroupCard.tsx":"39","D:\\projects\\epam\\memory-game\\src\\containers\\GamePage.tsx":"40","D:\\projects\\epam\\memory-game\\src\\components\\Card.tsx":"41","D:\\projects\\epam\\memory-game\\src\\utils\\gameUtils.ts":"42","D:\\projects\\epam\\memory-game\\src\\services\\storage.ts":"43","D:\\projects\\epam\\memory-game\\src\\utils\\getImage.ts":"44","D:\\projects\\epam\\memory-game\\src\\components\\Board.tsx":"45","D:\\projects\\epam\\memory-game\\src\\components\\FinalModal.tsx":"46","D:\\projects\\epam\\memory-game\\src\\reducers\\settings.ts":"47","D:\\projects\\epam\\memory-game\\src\\thunks\\settings.ts":"48","D:\\projects\\epam\\memory-game\\src\\actions\\actionTypes\\index.ts":"49","D:\\projects\\epam\\memory-game\\src\\actions\\actionTypes\\settings.ts":"50","D:\\projects\\epam\\memory-game\\src\\actions\\index.ts":"51","D:\\projects\\epam\\memory-game\\src\\actions\\settings.ts":"52"},{"size":861,"mtime":1613922384565,"results":"53","hashOfConfig":"54"},{"size":1966,"mtime":1613936060198,"results":"55","hashOfConfig":"54"},{"size":142,"mtime":1613936350117,"results":"56","hashOfConfig":"54"},{"size":1470,"mtime":1610840944000,"results":"57","hashOfConfig":"54"},{"size":687,"mtime":1613904030218,"results":"58","hashOfConfig":"54"},{"size":243,"mtime":1613936316946,"results":"59","hashOfConfig":"54"},{"size":177,"mtime":1613915341553,"results":"60","hashOfConfig":"54"},{"size":1877,"mtime":1613930758083,"results":"61","hashOfConfig":"54"},{"size":2242,"mtime":1613935905267,"results":"62","hashOfConfig":"54"},{"size":640,"mtime":1613936296854,"results":"63","hashOfConfig":"54"},{"size":1313,"mtime":1613936437514,"results":"64","hashOfConfig":"54"},{"size":7005,"mtime":1613936530064,"results":"65","hashOfConfig":"54"},{"size":1530,"mtime":1613934529446,"results":"66","hashOfConfig":"54"},{"size":135,"mtime":1613912832959,"results":"67","hashOfConfig":"54"},{"size":283,"mtime":1613933981201,"results":"68","hashOfConfig":"54"},{"size":124,"mtime":1544784792000,"results":"69","hashOfConfig":"54"},{"size":3431,"mtime":1613923286664,"results":"70","hashOfConfig":"54"},{"size":427,"mtime":1613915905947,"results":"71","hashOfConfig":"54"},{"size":771,"mtime":1613935001899,"results":"72","hashOfConfig":"54"},{"size":861,"mtime":1613922384565,"results":"73","hashOfConfig":"74"},{"size":2385,"mtime":1614520535957,"results":"75","hashOfConfig":"74"},{"size":151,"mtime":1614368250975,"results":"76","hashOfConfig":"74"},{"size":717,"mtime":1614273104156,"results":"77","hashOfConfig":"74"},{"size":249,"mtime":1614272563284,"results":"78","hashOfConfig":"74"},{"size":291,"mtime":1614273290089,"results":"79","hashOfConfig":"74"},{"size":375,"mtime":1614273290089,"results":"80","hashOfConfig":"74"},{"size":585,"mtime":1614070131631,"results":"81","hashOfConfig":"74"},{"size":2807,"mtime":1614358795045,"results":"82","hashOfConfig":"74"},{"size":8580,"mtime":1614520498854,"results":"83","hashOfConfig":"74"},{"size":2185,"mtime":1614515273415,"results":"84","hashOfConfig":"74"},{"size":1191,"mtime":1614358405492,"results":"85","hashOfConfig":"74"},{"size":1473,"mtime":1614520498831,"results":"86","hashOfConfig":"74"},{"size":1904,"mtime":1614274032939,"results":"87","hashOfConfig":"74"},{"size":957,"mtime":1614274456069,"results":"88","hashOfConfig":"74"},{"size":282,"mtime":1613994006887,"results":"89","hashOfConfig":"74"},{"size":297,"mtime":1614261414712,"results":"90","hashOfConfig":"74"},{"size":1395,"mtime":1614515238952,"results":"91","hashOfConfig":"74"},{"size":917,"mtime":1614515153519,"results":"92","hashOfConfig":"74"},{"size":1778,"mtime":1614341769581,"results":"93","hashOfConfig":"74"},{"size":6223,"mtime":1614351664549,"results":"94","hashOfConfig":"74"},{"size":2178,"mtime":1614352823654,"results":"95","hashOfConfig":"74"},{"size":369,"mtime":1614192740160,"results":"96","hashOfConfig":"74"},{"size":926,"mtime":1614247304271,"results":"97","hashOfConfig":"74"},{"size":961,"mtime":1614273104166,"results":"98","hashOfConfig":"74"},{"size":2226,"mtime":1614327262503,"results":"99","hashOfConfig":"74"},{"size":3452,"mtime":1614363443127,"results":"100","hashOfConfig":"74"},{"size":633,"mtime":1614364901999,"results":"101","hashOfConfig":"74"},{"size":376,"mtime":1614369404055,"results":"102","hashOfConfig":"74"},{"size":28,"mtime":1614364330630,"results":"103","hashOfConfig":"74"},{"size":50,"mtime":1614364504547,"results":"104","hashOfConfig":"74"},{"size":28,"mtime":1614364276316,"results":"105","hashOfConfig":"74"},{"size":208,"mtime":1614364902005,"results":"106","hashOfConfig":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v29jp",{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"iccy2h",{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"150"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"150"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"150"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"150"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"D:\\projects\\epam\\memoryGame\\src\\index.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\App.tsx",["220","221","222","223","224"],"import React, {FC, useCallback, useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {Header, Footer, Loader} from \"./components\";\nimport {IState} from \"./common/types\";\nimport {Dispatch} from \"redux\";\nimport { Menu, Rules, Settings, GamePage, ChooseCardsThemes } from \"./containers\";\nimport imageArray from \"./utils/preloadImages\";\n\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        preloadImage();\n    }, []);\n\n    const preloadImage = () => {\n        setLoading(true);\n        const images = imageArray();\n        let length = images.length;\n        images.forEach((picture) => {\n            const img = new Image();\n            img.src = picture;\n            img.onload = () => {\n                --length;\n                if (length <= 0) {\n                    setLoading(false);\n                }\n            };\n        });\n    };\n\n    return (\n        <>\n            <Router>\n            <div>\n                <Header/>\n                {(loading) ? (<Loader/>) : (\n                    <Switch>\n                        <Route path='/' exact component={Menu}/>\n                        <Route path='/chooseCards' component={ChooseCardsThemes}/>\n                        <Route path='/gameRules' component={Rules}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/game' component={GamePage}/>\n                    </Switch>\n                )}\n                <Footer/>\n            </div>\n        </Router>\n        </>\n    );\n};\n\nexport default App;\n\n// const mapStateToProps = (state: IState) => ({\n//     errorMessage: state.toast.message,\n// });\n\n// const mapDispatchToProps = (dispatch: Dispatch) => ({\n//     onResetToast: () => dispatch(resetToastMessage()),\n// });\n\n// export const App = connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n","D:\\projects\\epam\\memoryGame\\src\\reducers\\index.ts",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Loader.tsx",[],["225","226"],"D:\\projects\\epam\\memoryGame\\src\\utils\\preloadImages.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Menu.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Rules.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Header.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\GroupCard.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\GamePage.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Footer.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Settings.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\actions\\actions.ts",["227"],"import { FLIP_CARD, RESTART_GAME, MATCH_CARDS } from './actionTypes/actionTypes';\n\n// export const flipCard = index => ({\n// \ttype: FLIP_CARD,\n// \tindex,\n// });\n\nexport const matchCards = () => ({\n\ttype: MATCH_CARDS,\n});\n\nexport const restartGame = () => ({\n\ttype: RESTART_GAME,\n});\n","D:\\projects\\epam\\memoryGame\\src\\actions\\actionTypes\\actionTypes.ts",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\ChooseCardsThemes.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\utils\\useTheme.js",[],"D:\\projects\\epam\\memoryGame\\src\\reducers\\memory.ts",[],"D:\\projects\\epam\\memory-game\\src\\index.tsx",[],["228","229"],"D:\\projects\\epam\\memory-game\\src\\App.tsx",["230","231","232","233"],"D:\\projects\\epam\\memory-game\\src\\reducers\\index.ts",[],"D:\\projects\\epam\\memory-game\\src\\utils\\preloadImages.js",[],["234","235"],"D:\\projects\\epam\\memory-game\\src\\assets\\images\\cats\\index.js",[],"D:\\projects\\epam\\memory-game\\src\\assets\\images\\winter\\index.js",[],"D:\\projects\\epam\\memory-game\\src\\assets\\images\\architecture\\index.js",[],"D:\\projects\\epam\\memory-game\\src\\components\\Loader.tsx",[],"D:\\projects\\epam\\memory-game\\src\\containers\\ChooseCardsThemes.tsx",[],"D:\\projects\\epam\\memory-game\\src\\containers\\Settings.tsx",[],"D:\\projects\\epam\\memory-game\\src\\components\\LinkButton.tsx",[],"D:\\projects\\epam\\memory-game\\src\\components\\Modal.tsx",[],"D:\\projects\\epam\\memory-game\\src\\components\\PlaySoundButton.tsx",[],"D:\\projects\\epam\\memory-game\\src\\components\\Footer.tsx",[],"D:\\projects\\epam\\memory-game\\src\\components\\Header.tsx",[],"D:\\projects\\epam\\memory-game\\src\\containers\\index.ts",[],"D:\\projects\\epam\\memory-game\\src\\components\\index.ts",[],"D:\\projects\\epam\\memory-game\\src\\containers\\Rules.tsx",[],"D:\\projects\\epam\\memory-game\\src\\containers\\Menu.tsx",["236","237","238"],"D:\\projects\\epam\\memory-game\\src\\components\\GroupCard.tsx",[],"D:\\projects\\epam\\memory-game\\src\\containers\\GamePage.tsx",["239","240","241","242","243"],"import React, {useState, useEffect, useContext, useMemo, useCallback} from \"react\";\nimport { Board, FinalModal } from \"../components\";\nimport {CARD_THEMES} from \"./ChooseCardsThemes\";\nimport {Storage} from \"../services/storage\";\nimport {ISettings} from \"../common/types\";\nimport {shuffle} from \"../utils/gameUtils\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nconst GamePage = () => {\n    const classes = useStyles();\n    const [flipped, setFlipped] = useState<number[]>([]);\n    const [cards, setCards] = useState<any[]>([]);\n    const [solved, setSolved] = useState<any[]>([]);\n    const [disabled, setDisabled] = useState(false);\n    const [flips, setFlips] = useState(0);\n    const [isRunning, setIsRunning] = useState(true);\n    const [modalShow, setModalShow] = useState(false);\n    const [victory, setVictory] = useState(false);\n\n    const settings = useMemo<ISettings>(() => {\n        return new Storage().getSettings();\n    }, []);\n\n    useEffect(() => {\n        setCards(initDeck(settings));\n    }, [settings]);\n\n    useEffect(() => {\n        if (solved.length === 16) {\n            setIsRunning(false);\n            setVictory(true);\n            setModalShow(true);\n        }\n    }, [solved]);\n\n    useEffect(() => {\n        // if (seconds === 0) {\n        //     setIsRunning(false);\n            if (solved.length !== 16) {\n                setVictory(false);\n            }\n            setModalShow(true);\n        // }\n    }, [solved.length]);\n\n    // useEffect(() => {\n    //     if (isRunning) {\n    //         const id = window.setInterval(\n    //             () => setSeconds((seconds) => seconds - 1),\n    //             1000\n    //         );\n    //         setIntervalId(id);\n    //     } else {\n    //         // Clear set Interval\n    //         window.clearInterval(intervalId);\n    //     }\n    // }, [isRunning, intervalId]);\n\n    const onClick = (id: number) => {\n        setDisabled(true);\n\n        // If no cards flipped\n        if (flipped.length === 0) {\n            if (!sameCardClicked(id)) {\n                setFlips((flips) => flips + 1);\n            }\n            setFlipped([id]);\n            setDisabled(false);\n            // At least flipped one\n        } else {\n            if (!sameCardClicked(id)) {\n                setFlips((flips) => flips + 1);\n            }\n\n            if (sameCardClicked(id)) {\n                setDisabled(false);\n                return;\n            }\n            // if two cards flipped\n            setFlipped([flipped[0], id]);\n\n            // if we get a match\n            if (isMatch(id)) {\n                setSolved([...solved, flipped[0], id]);\n                // Reset Cards\n                setFlipped([]);\n                setDisabled(false);\n\n                // if not a match\n            } else {\n                setTimeout(() => {\n                    // Reset Cards\n                    setFlipped([]);\n                    setDisabled(false);\n                }, 2000);\n            }\n        }\n    };\n\n    const sameCardClicked = (id: number) => {\n        return flipped.includes(id);\n    };\n\n    const isMatch = (id: number) => {\n        const clickedCard = cards.find((card) => card.id === id);\n        const flippedCard = cards.find((card) => flipped[0] === card.id);\n        return flippedCard.type === clickedCard.type;\n    };\n\n    const playAgain = () => {\n        setFlipped([]);\n        setCards(initDeck(settings));\n        setSolved([]);\n        setDisabled(false);\n        setFlips(0);\n        setIsRunning(true);\n        setModalShow(false);\n    };\n\n    return (\n        <>\n            <main className={classes.gameContainer}>\n                <div className={classes.stats}>\n                    <Link to={\"/game\"}><span className={classes.timeAndFlips}>Restart Game</span></Link>\n                    <span className={classes.timeAndFlips}>Flips: {flips}</span>\n                </div>\n                <div className={classes.cardsContainer}>\n                    <Board\n                        cards={cards}\n                        flipped={flipped}\n                        onClick={onClick}\n                        disabled={disabled}\n                        solved={solved}\n                    />\n                </div>\n                <div>\n                    {modalShow && <FinalModal flips={flips} victory={victory} />}\n                </div>\n            </main>\n        </>\n    );\n};\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n    gameContainer:{\n        display: 'flex',\n        flexDirection: 'column',\n\n        paddingBottom: '1rem',\n        [theme.breakpoints.up(\"md\")]: {\n            padding: '0 9rem',\n        },\n        [theme.breakpoints.up(\"sm\")]: {\n            padding: '0 5rem',\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            padding: '0 3rem',\n        },\n    },\n    stats:{\n        fontSize: '3.2rem',\n        color: '#fff',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    \"& svg\": {\n            verticalAlign: 'middle',\n            marginBottom: '10px',\n        }\n    },\n    timeAndFlips:{\n        color: '#01c5f1',\n        fontFamily: 'Hachi Maru Pop',\n        [theme.breakpoints.up(\"lg\")]: {\n            fontSize: '3rem',\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            fontSize: '2rem',\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: '1.5rem',\n        }\n    },\n    cardsContainer:{\n        marginTop: '3rem',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n\n    }),\n);\nconst initDeck = (settings: ISettings) => {\n    let id = 0;\n    let cards: any[] = [];\n\n    if (CARD_THEMES.WINTER === settings.cardsTheme) {\n        cards = ['sin', 'vet', 'yellow', 'sun', 'shar', 'bike']\n    } else if (CARD_THEMES.ARCHITECTURE === settings.cardsTheme) {\n        cards = ['white','blue','york','orange','sad','stairs']\n    } else {\n        cards = ['siam','whcat','rusg','tree','kun','eyes'];\n    }\n    cards = cards.reduce((acc: any, type: string) => {\n        return [...acc, {id: id++, type}, {id: id++, type}];\n    }, []);\n\n    return shuffle(cards);\n};\n\n export default GamePage;\n","D:\\projects\\epam\\memory-game\\src\\components\\Card.tsx",[],"D:\\projects\\epam\\memory-game\\src\\utils\\gameUtils.ts",[],"D:\\projects\\epam\\memory-game\\src\\services\\storage.ts",[],"D:\\projects\\epam\\memory-game\\src\\utils\\getImage.ts",["244"],"import { winter1, winter2, winter3, winter4, winter5, winter6} from \"../assets/images/winter\";\r\nimport { architecture1, architecture3, architecture4, architecture5, architecture6, architecture8 } from \"../assets/images/architecture\";\r\nimport { cat1, cat3, cat4, cat5, cat6, cat8 } from \"../assets/images/cats\";\r\n\r\nconst getImage = (type: string) => {\r\n    let image = \"\";\r\n\r\n    const store = {\r\n        \"sin\": winter1,\r\n        \"vet\": winter2,\r\n        \"yellow\": winter3,\r\n        \"sun\": winter4,\r\n        \"shar\": winter5,\r\n        \"bike\": winter6,\r\n        \"white\": architecture1,\r\n        \"blue\": architecture3,\r\n        \"york\": architecture4,\r\n        \"orange\": architecture5,\r\n        \"sad\": architecture6,\r\n        \"stairs\": architecture8,\r\n        \"siam\": cat1,\r\n        \"whcat\": cat3,\r\n        \"rusg\": cat4,\r\n        \"tree\": cat5,\r\n        \"kun\": cat6,\r\n        \"eyes\": cat8,\r\n    };\r\n\r\n    return (store as any)[type];\r\n};\r\n\r\nexport default getImage;\r\n","D:\\projects\\epam\\memory-game\\src\\components\\Board.tsx",["245","246","247"],"import React, {FC, useMemo} from \"react\";\nimport { Card } from \"../components\";\nimport {Theme, makeStyles, createStyles, createMuiTheme, Grid} from \"@material-ui/core\";\n\ninterface IBoardProps {\n    cards: Array<{id:number, type:string}>;\n    flipped: Array<number>;\n    solved: Array<number>;\n    onClick: (id: number) => void;\n    disabled: boolean;\n\n}\nconst Board:FC<IBoardProps> = (props: IBoardProps) => {\n    const { cards, flipped, onClick, disabled, solved } = props;\n    const classes = useStyles();\n\n    const series = useMemo(() => {\n        const half = splitIntoHalf(cards);\n        const quatar_1 = splitIntoHalf(half.first);\n        const quatar_2 = splitIntoHalf(half.second);\n        return [\n            quatar_1.first,\n            quatar_1.second,\n            quatar_2.first,\n            quatar_2.second,\n        ]\n    }, [cards]);\n\n\n    return (\n        <Grid container>\n            {series.map((seriesItem, index) => (\n                <Grid container item key={`series-${index}`} xs={12} md={6} justify={\"space-around\"} className={classes.gridItem}>\n                    {seriesItem.map((card) => (\n                        <Grid item key={card.id} xs={4} md={2} >\n                            <Card\n                                id={card.id}\n                                type={card.type}\n                                width={100}\n                                height={150}\n                                flipped={flipped.includes(card.id)}\n                                solved={solved.includes(card.id)}\n                                onClick={onClick}\n                                disabled={disabled || solved.includes(card.id)}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nconst splitIntoHalf = (array: any[]) => {\n    const half = Math.ceil(array.length / 2);\n    return {\n        first: array.splice(0, half),\n        second: array.splice(-half),\n    };\n};\n\nconst useStyles = makeStyles({\n    board:{\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    gridItem:{\n        textAlign: 'center',\n    },\n\n});\n\nexport default Board;\n","D:\\projects\\epam\\memory-game\\src\\components\\FinalModal.tsx",["248","249","250","251","252","253","254","255"],"import React, {FC, useCallback} from \"react\";\nimport { GiBackstab, GiCardJoker, GiTrophy } from \"react-icons/gi\";\nimport LinkButton from \"../components/LinkButton\";\nimport {makeStyles, Theme, ThemeProvider} from \"@material-ui/core\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Modal from \"./Modal\";\n\ninterface IFinalModal {\n    victory: boolean;\n    flips: number;\n}\n\nconst FinalModal:FC<IFinalModal> = (props:IFinalModal) => {\n    const {victory, flips} = props;\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const handleSubmit = useCallback(() => {\n\n    }, []);\n    return (\n\n        <div className={classes.modalContainer}>\n            <Dialog open={open}>\n                <h2 className={classes.title}>Game Over</h2>\n                <DialogContent className={classes.content}>\n                    <div>{(props.victory) ? (\n                        <span className={classes.win}> <GiTrophy /> YOU WIN!! </span>) : (<span className={classes.lose}> <GiBackstab /> YOU LOSE!! </span>\n                    )} </div>\n                    <div className={classes.joker}><GiCardJoker /> Cards Flipped: {props.flips}</div>\n                    <form className={classes.root}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Your Name\"\n                        type=\"text\"\n                        fullWidth\n                        className={classes.margin}\n                    />\n                    </form>\n                </DialogContent>\n                <LinkButton to={\"/score\"} text={\"Continue\"} />\n            </Dialog>\n        </div>\n    );\n};\n\n\n\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    modalContainer: {\n        marginTop: '4rem',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n\n        boxShadow: '0 2rem 5rem 0 rgba(0, 0, 0, 0.2)',\n\n    },\n    title:{\n        display: 'flex',\n        justifyContent: 'center',\n        borderBottom: '1px solid #3288dc',\n        color: '#3288dc',\n        fontFamily: 'Hachi Maru Pop',\n        fontSize: '2.2rem',\n        textTransform: 'uppercase',\n        padding: '1rem 0',\n    },\n    content: {\n        fontSize: '2rem',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '500px',\n        minHeight: '300px',\n\n        '& svg': {\n            verticalAlign: 'middle',\n            marginBottom: '8px',\n        }\n    },\n    win:{\n        fontFamily: 'Reggae One',\n        color: '#3288dc',\n        '& svg': {\n            color: '#47ff44',\n        }\n    },\n    lose:{\n        fontFamily: 'Reggae One',\n        color: '#3288dc',\n        '& svg': {\n            color: '#ff4444',\n        }\n    },\n    joker:{\n        fontFamily: 'Reggae One',\n        color: '#3288dc',\n        '& svg': {\n            color: '#01c5f1 ',\n        }\n    },\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: '2rem',\n    },\n}));\n\n\n// const theme = createMuiTheme({\n//     palette: {\n//         primary: green,\n//     },\n// });\n\nexport default FinalModal;\n","D:\\projects\\epam\\memory-game\\src\\reducers\\settings.ts",[],"D:\\projects\\epam\\memory-game\\src\\thunks\\settings.ts",[],"D:\\projects\\epam\\memory-game\\src\\actions\\actionTypes\\index.ts",[],"D:\\projects\\epam\\memory-game\\src\\actions\\actionTypes\\settings.ts",[],"D:\\projects\\epam\\memory-game\\src\\actions\\index.ts",[],"D:\\projects\\epam\\memory-game\\src\\actions\\settings.ts",[],{"ruleId":"256","severity":1,"message":"257","line":1,"column":16,"nodeType":"258","messageId":"259","endLine":1,"endColumn":18},{"ruleId":"256","severity":1,"message":"260","line":1,"column":20,"nodeType":"258","messageId":"259","endLine":1,"endColumn":31},{"ruleId":"256","severity":1,"message":"261","line":3,"column":9,"nodeType":"258","messageId":"259","endLine":3,"endColumn":16},{"ruleId":"256","severity":1,"message":"262","line":5,"column":9,"nodeType":"258","messageId":"259","endLine":5,"endColumn":15},{"ruleId":"256","severity":1,"message":"263","line":6,"column":9,"nodeType":"258","messageId":"259","endLine":6,"endColumn":17},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"256","severity":1,"message":"268","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":19},{"ruleId":"264","replacedBy":"269"},{"ruleId":"266","replacedBy":"270"},{"ruleId":"256","severity":1,"message":"260","line":1,"column":20,"nodeType":"258","messageId":"259","endLine":1,"endColumn":31},{"ruleId":"256","severity":1,"message":"261","line":3,"column":9,"nodeType":"258","messageId":"259","endLine":3,"endColumn":16},{"ruleId":"256","severity":1,"message":"262","line":5,"column":9,"nodeType":"258","messageId":"259","endLine":5,"endColumn":15},{"ruleId":"256","severity":1,"message":"263","line":6,"column":9,"nodeType":"258","messageId":"259","endLine":6,"endColumn":17},{"ruleId":"264","replacedBy":"269"},{"ruleId":"266","replacedBy":"270"},{"ruleId":"256","severity":1,"message":"271","line":1,"column":33,"nodeType":"258","messageId":"259","endLine":1,"endColumn":39},{"ruleId":"256","severity":1,"message":"272","line":1,"column":41,"nodeType":"258","messageId":"259","endLine":1,"endColumn":49},{"ruleId":"256","severity":1,"message":"273","line":8,"column":11,"nodeType":"258","messageId":"259","endLine":8,"endColumn":22},{"ruleId":"256","severity":1,"message":"274","line":1,"column":37,"nodeType":"258","messageId":"259","endLine":1,"endColumn":47},{"ruleId":"256","severity":1,"message":"260","line":1,"column":58,"nodeType":"258","messageId":"259","endLine":1,"endColumn":69},{"ruleId":"256","severity":1,"message":"275","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":18},{"ruleId":"256","severity":1,"message":"276","line":18,"column":12,"nodeType":"258","messageId":"259","endLine":18,"endColumn":21},{"ruleId":"256","severity":1,"message":"277","line":112,"column":11,"nodeType":"258","messageId":"259","endLine":112,"endColumn":20},{"ruleId":"256","severity":1,"message":"278","line":6,"column":9,"nodeType":"258","messageId":"259","endLine":6,"endColumn":14},{"ruleId":"256","severity":1,"message":"279","line":3,"column":9,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"256","severity":1,"message":"280","line":3,"column":28,"nodeType":"258","messageId":"259","endLine":3,"endColumn":40},{"ruleId":"256","severity":1,"message":"281","line":3,"column":42,"nodeType":"258","messageId":"259","endLine":3,"endColumn":56},{"ruleId":"256","severity":1,"message":"282","line":4,"column":28,"nodeType":"258","messageId":"259","endLine":4,"endColumn":41},{"ruleId":"256","severity":1,"message":"283","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":21},{"ruleId":"256","severity":1,"message":"284","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":19},{"ruleId":"256","severity":1,"message":"285","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":13},{"ruleId":"256","severity":1,"message":"286","line":18,"column":12,"nodeType":"258","messageId":"259","endLine":18,"endColumn":19},{"ruleId":"256","severity":1,"message":"287","line":18,"column":21,"nodeType":"258","messageId":"259","endLine":18,"endColumn":26},{"ruleId":"256","severity":1,"message":"288","line":20,"column":18,"nodeType":"258","messageId":"259","endLine":20,"endColumn":25},{"ruleId":"256","severity":1,"message":"289","line":21,"column":11,"nodeType":"258","messageId":"259","endLine":21,"endColumn":23},"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'connect' is defined but never used.","'IState' is defined but never used.","'Dispatch' is defined but never used.","no-native-reassign",["290"],"no-negated-in-lhs",["291"],"'FLIP_CARD' is defined but never used.",["290"],["291"],"'useRef' is defined but never used.","'useState' is defined but never used.","'handleSound' is assigned a value but never used.","'useContext' is defined but never used.","'classNames' is defined but never used.","'isRunning' is assigned a value but never used.","'playAgain' is assigned a value but never used.","'image' is assigned a value but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'Modal' is defined but never used.","'victory' is assigned a value but never used.","'flips' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]