[{"D:\\projects\\epam\\memoryGame\\src\\index.tsx":"1","D:\\projects\\epam\\memoryGame\\src\\App.tsx":"2","D:\\projects\\epam\\memoryGame\\src\\reducers\\index.ts":"3","D:\\projects\\epam\\memoryGame\\src\\components\\Loader.tsx":"4","D:\\projects\\epam\\memoryGame\\src\\utils\\preloadImages.js":"5","D:\\projects\\epam\\memoryGame\\src\\containers\\index.js":"6","D:\\projects\\epam\\memoryGame\\src\\components\\index.js":"7","D:\\projects\\epam\\memoryGame\\src\\containers\\Menu.js":"8","D:\\projects\\epam\\memoryGame\\src\\containers\\Rules.js":"9","D:\\projects\\epam\\memoryGame\\src\\components\\Header.js":"10","D:\\projects\\epam\\memoryGame\\src\\components\\GroupCard.js":"11","D:\\projects\\epam\\memoryGame\\src\\containers\\GamePage.js":"12","D:\\projects\\epam\\memoryGame\\src\\components\\Footer.js":"13","D:\\projects\\epam\\memoryGame\\src\\assets\\images\\robots\\index.js":"14","D:\\projects\\epam\\memoryGame\\src\\assets\\images\\dogs\\index.js":"15","D:\\projects\\epam\\memoryGame\\src\\assets\\images\\pokemon\\index.js":"16","D:\\projects\\epam\\memoryGame\\src\\containers\\Settings.tsx":"17","D:\\projects\\epam\\memoryGame\\src\\actions\\actions.ts":"18","D:\\projects\\epam\\memoryGame\\src\\actions\\actionTypes\\actionTypes.ts":"19","D:\\projects\\epam\\memoryGame\\src\\containers\\ChooseCardsThemes.tsx":"20","D:\\projects\\epam\\memoryGame\\src\\utils\\useTheme.js":"21","D:\\projects\\epam\\memoryGame\\src\\reducers\\memory.ts":"22","D:\\projects\\epam\\memory-game\\src\\index.tsx":"23","D:\\projects\\epam\\memory-game\\src\\App.tsx":"24","D:\\projects\\epam\\memory-game\\src\\reducers\\index.ts":"25","D:\\projects\\epam\\memory-game\\src\\utils\\preloadImages.js":"26","D:\\projects\\epam\\memory-game\\src\\components\\index.js":"27","D:\\projects\\epam\\memory-game\\src\\reducers\\memory.ts":"28","D:\\projects\\epam\\memory-game\\src\\containers\\index.js":"29","D:\\projects\\epam\\memory-game\\src\\components\\GroupCard.js":"30","D:\\projects\\epam\\memory-game\\src\\components\\Footer.js":"31","D:\\projects\\epam\\memory-game\\src\\components\\Header.js":"32","D:\\projects\\epam\\memory-game\\src\\containers\\GamePage.js":"33","D:\\projects\\epam\\memory-game\\src\\containers\\Menu.js":"34","D:\\projects\\epam\\memory-game\\src\\containers\\Rules.js":"35","D:\\projects\\epam\\memory-game\\src\\assets\\images\\dogs\\index.js":"36","D:\\projects\\epam\\memory-game\\src\\assets\\images\\robots\\index.js":"37","D:\\projects\\epam\\memory-game\\src\\assets\\images\\pokemon\\index.js":"38","D:\\projects\\epam\\memory-game\\src\\actions\\actionTypes\\actionTypes.ts":"39","D:\\projects\\epam\\memory-game\\src\\components\\Loader.tsx":"40","D:\\projects\\epam\\memory-game\\src\\containers\\ChooseCardsThemes.tsx":"41","D:\\projects\\epam\\memory-game\\src\\containers\\Settings.tsx":"42","D:\\projects\\epam\\memory-game\\src\\actions\\actions.ts":"43","D:\\projects\\epam\\memory-game\\src\\utils\\useTheme.js":"44"},{"size":861,"mtime":1613922384565,"results":"45","hashOfConfig":"46"},{"size":1966,"mtime":1613936060198,"results":"47","hashOfConfig":"46"},{"size":142,"mtime":1613936350117,"results":"48","hashOfConfig":"46"},{"size":1470,"mtime":1610840944000,"results":"49","hashOfConfig":"46"},{"size":687,"mtime":1613904030218,"results":"50","hashOfConfig":"46"},{"size":243,"mtime":1613936316946,"results":"51","hashOfConfig":"46"},{"size":177,"mtime":1613915341553,"results":"52","hashOfConfig":"46"},{"size":1877,"mtime":1613930758083,"results":"53","hashOfConfig":"46"},{"size":2242,"mtime":1613935905267,"results":"54","hashOfConfig":"46"},{"size":640,"mtime":1613936296854,"results":"55","hashOfConfig":"46"},{"size":1313,"mtime":1613936437514,"results":"56","hashOfConfig":"46"},{"size":7005,"mtime":1613936530064,"results":"57","hashOfConfig":"46"},{"size":1530,"mtime":1613934529446,"results":"58","hashOfConfig":"46"},{"size":315,"mtime":1613936274452,"results":"59","hashOfConfig":"46"},{"size":316,"mtime":1600548072000,"results":"60","hashOfConfig":"46"},{"size":346,"mtime":1600548072000,"results":"61","hashOfConfig":"46"},{"size":135,"mtime":1613912832959,"results":"62","hashOfConfig":"46"},{"size":283,"mtime":1613933981201,"results":"63","hashOfConfig":"46"},{"size":124,"mtime":1544784792000,"results":"64","hashOfConfig":"46"},{"size":3431,"mtime":1613923286664,"results":"65","hashOfConfig":"46"},{"size":427,"mtime":1613915905947,"results":"66","hashOfConfig":"46"},{"size":771,"mtime":1613935001899,"results":"67","hashOfConfig":"46"},{"size":861,"mtime":1613922384565,"results":"68","hashOfConfig":"69"},{"size":2038,"mtime":1613994006879,"results":"70","hashOfConfig":"69"},{"size":142,"mtime":1613936350117,"results":"71","hashOfConfig":"69"},{"size":687,"mtime":1613904030218,"results":"72","hashOfConfig":"69"},{"size":177,"mtime":1613915341553,"results":"73","hashOfConfig":"69"},{"size":771,"mtime":1613935001899,"results":"74","hashOfConfig":"69"},{"size":282,"mtime":1613994006887,"results":"75","hashOfConfig":"69"},{"size":1313,"mtime":1613936437514,"results":"76","hashOfConfig":"69"},{"size":1889,"mtime":1613999512017,"results":"77","hashOfConfig":"69"},{"size":1310,"mtime":1613999512027,"results":"78","hashOfConfig":"69"},{"size":7005,"mtime":1613936530064,"results":"79","hashOfConfig":"69"},{"size":2464,"mtime":1613994560487,"results":"80","hashOfConfig":"69"},{"size":2868,"mtime":1614003033626,"results":"81","hashOfConfig":"69"},{"size":316,"mtime":1600548072000,"results":"82","hashOfConfig":"69"},{"size":315,"mtime":1613936274452,"results":"83","hashOfConfig":"69"},{"size":346,"mtime":1600548072000,"results":"84","hashOfConfig":"69"},{"size":124,"mtime":1544784792000,"results":"85","hashOfConfig":"69"},{"size":1470,"mtime":1610840944000,"results":"86","hashOfConfig":"69"},{"size":3431,"mtime":1613994511323,"results":"87","hashOfConfig":"69"},{"size":6619,"mtime":1614022466184,"results":"88","hashOfConfig":"69"},{"size":283,"mtime":1613933981201,"results":"89","hashOfConfig":"69"},{"size":427,"mtime":1613915905947,"results":"90","hashOfConfig":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v29jp",{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"iccy2h",{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"140"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"148"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"140"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"D:\\projects\\epam\\memoryGame\\src\\index.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\App.tsx",["186","187","188","189","190"],"import React, {FC, useCallback, useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {Header, Footer, Loader} from \"./components\";\nimport {IState} from \"./common/types\";\nimport {Dispatch} from \"redux\";\nimport { Menu, Rules, Settings, GamePage, ChooseCardsThemes } from \"./containers\";\nimport imageArray from \"./utils/preloadImages\";\n\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        preloadImage();\n    }, []);\n\n    const preloadImage = () => {\n        setLoading(true);\n        const images = imageArray();\n        let length = images.length;\n        images.forEach((picture) => {\n            const img = new Image();\n            img.src = picture;\n            img.onload = () => {\n                --length;\n                if (length <= 0) {\n                    setLoading(false);\n                }\n            };\n        });\n    };\n\n    return (\n        <>\n            <Router>\n            <div>\n                <Header/>\n                {(loading) ? (<Loader/>) : (\n                    <Switch>\n                        <Route path='/' exact component={Menu}/>\n                        <Route path='/chooseCards' component={ChooseCardsThemes}/>\n                        <Route path='/gameRules' component={Rules}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/game' component={GamePage}/>\n                    </Switch>\n                )}\n                <Footer/>\n            </div>\n        </Router>\n        </>\n    );\n};\n\nexport default App;\n\n// const mapStateToProps = (state: IState) => ({\n//     errorMessage: state.toast.message,\n// });\n\n// const mapDispatchToProps = (dispatch: Dispatch) => ({\n//     onResetToast: () => dispatch(resetToastMessage()),\n// });\n\n// export const App = connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n","D:\\projects\\epam\\memoryGame\\src\\reducers\\index.ts",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Loader.tsx",[],["191","192"],"D:\\projects\\epam\\memoryGame\\src\\utils\\preloadImages.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Menu.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Rules.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Header.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\GroupCard.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\GamePage.js",[],"D:\\projects\\epam\\memoryGame\\src\\components\\Footer.js",[],"D:\\projects\\epam\\memoryGame\\src\\assets\\images\\robots\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\assets\\images\\dogs\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\assets\\images\\pokemon\\index.js",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\Settings.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\actions\\actions.ts",["193"],"import { FLIP_CARD, RESTART_GAME, MATCH_CARDS } from './actionTypes/actionTypes';\n\n// export const flipCard = index => ({\n// \ttype: FLIP_CARD,\n// \tindex,\n// });\n\nexport const matchCards = () => ({\n\ttype: MATCH_CARDS,\n});\n\nexport const restartGame = () => ({\n\ttype: RESTART_GAME,\n});\n","D:\\projects\\epam\\memoryGame\\src\\actions\\actionTypes\\actionTypes.ts",[],"D:\\projects\\epam\\memoryGame\\src\\containers\\ChooseCardsThemes.tsx",[],"D:\\projects\\epam\\memoryGame\\src\\utils\\useTheme.js",[],"D:\\projects\\epam\\memoryGame\\src\\reducers\\memory.ts",[],"D:\\projects\\epam\\memory-game\\src\\index.tsx",[],["194","195"],"D:\\projects\\epam\\memory-game\\src\\App.tsx",["196","197","198","199","200"],"import React, {FC, useCallback, useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {Header, Footer, Loader} from \"./components\";\nimport {IState} from \"./common/types\";\nimport {Dispatch} from \"redux\";\nimport { Menu, Rules, Settings, Score, GamePage, ChooseCardsThemes } from \"./containers\";\nimport imageArray from \"./utils/preloadImages\";\n\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        preloadImage();\n    }, []);\n\n    const preloadImage = () => {\n        setLoading(true);\n        const images = imageArray();\n        let length = images.length;\n        images.forEach((picture) => {\n            const img = new Image();\n            img.src = picture;\n            img.onload = () => {\n                --length;\n                if (length <= 0) {\n                    setLoading(false);\n                }\n            };\n        });\n    };\n\n    return (\n        <>\n            <Router>\n            <div>\n                <Header/>\n                {(loading) ? (<Loader/>) : (\n                    <Switch>\n                        <Route path='/' exact component={Menu}/>\n                        <Route path='/chooseCards' component={ChooseCardsThemes}/>\n                        <Route path='/gameRules' component={Rules}/>\n                        <Route path='/score' component={Score}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/game' component={GamePage}/>\n                    </Switch>\n                )}\n                <Footer/>\n            </div>\n        </Router>\n        </>\n    );\n};\n\nexport default App;\n\n// const mapStateToProps = (state: IState) => ({\n//     errorMessage: state.toast.message,\n// });\n\n// const mapDispatchToProps = (dispatch: Dispatch) => ({\n//     onResetToast: () => dispatch(resetToastMessage()),\n// });\n\n// export const App = connect(mapStateToProps, mapDispatchToProps)(AppContainer);\n","D:\\projects\\epam\\memory-game\\src\\reducers\\index.ts",[],"D:\\projects\\epam\\memory-game\\src\\utils\\preloadImages.js",[],["201","202"],"D:\\projects\\epam\\memory-game\\src\\components\\index.js",[],"D:\\projects\\epam\\memory-game\\src\\reducers\\memory.ts",[],"D:\\projects\\epam\\memory-game\\src\\containers\\index.js",[],"D:\\projects\\epam\\memory-game\\src\\components\\GroupCard.js",[],"D:\\projects\\epam\\memory-game\\src\\components\\Footer.js",[],"D:\\projects\\epam\\memory-game\\src\\components\\Header.js",[],"D:\\projects\\epam\\memory-game\\src\\containers\\GamePage.js",[],"D:\\projects\\epam\\memory-game\\src\\containers\\Menu.js",["203"],"import React from \"react\";\nimport {Link, Route} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst Menu = () => {\n    const classes = useStyles();\n\n    return (\n        <main>\n            <div className={classes.modalContainer} >\n                <div className={classes.modal}>\n                    <h2 className={classes.modalTitle}>Welcome</h2>\n                    <Grid container\n                          direction=\"column\"\n                          justify=\"center\"\n                          alignItems=\"center\">\n                        <Link to={\"/chooseCards\"} className={classes.button}>{\"New Game\"}</Link>\n                        <Link to={\"/score\"} className={classes.button}>{\"High Score\"}</Link>\n                        <Link to={\"/gameRules\"} className={classes.button}>{\"Rules\"}</Link>\n                        <Link to={\"/settings\"} className={classes.button}>{\"Settings\"}</Link>\n                    </Grid>\n                </div>\n            </div>\n        </main>\n    );\n};\nconst useStyles = makeStyles({\n    modalContainer: {\n        marginTop: '4rem',\n        paddingBottom: '2rem',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    modal: {\n        width: '500px',\n        minHeight: '300px',\n        background: '#fff',\n        padding: '1.5rem 2rem',\n        borderRadius: '5px',\n        boxShadow: '0 2rem 5rem 0 rgba(0, 0, 0, 0.2)',\n    },\n    modalTitle: {\n        fontSize: '2.2rem',\n        display: 'flex',\n        justifyContent: 'center',\n        textTransform: 'uppercase',\n        fontFamily: 'Hachi Maru Pop',\n        color: '#3288dc',\n    },\n    button: {\n        fontSize: '1.8rem',\n        padding: '1rem 7rem',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        alignItems: 'center',\n        backgroundImage: 'linear-gradient(120deg, #3a7bd5, #00d2ff)',\n        cursor: 'pointer',\n        transition: 'all 0.3s',\n        marginTop:'1.5rem',\n        fontFamily: 'Reggae One',\n        width: '80%',\n        textAlign: 'center',\n        '&:hover': {\n            transform: 'scale(1.1)',\n            boxShadow: '0 1rem 2rem 0 rgba(0, 0, 0, 0.2)',\n        },\n        '&:focus': {\n            outline: 0,\n            boxShadow: '0 1rem 2rem 0 rgba(0, 0, 0, 0.2)',\n        },\n        '&:active': {\n            transform: 'scale(1)',\n        },\n    },\n\n\n});\nexport default Menu;\n\n","D:\\projects\\epam\\memory-game\\src\\containers\\Rules.js",[],"D:\\projects\\epam\\memory-game\\src\\assets\\images\\dogs\\index.js",[],"D:\\projects\\epam\\memory-game\\src\\assets\\images\\robots\\index.js",[],"D:\\projects\\epam\\memory-game\\src\\assets\\images\\pokemon\\index.js",[],"D:\\projects\\epam\\memory-game\\src\\actions\\actionTypes\\actionTypes.ts",[],"D:\\projects\\epam\\memory-game\\src\\components\\Loader.tsx",[],"D:\\projects\\epam\\memory-game\\src\\containers\\ChooseCardsThemes.tsx",[],"D:\\projects\\epam\\memory-game\\src\\containers\\Settings.tsx",[],"D:\\projects\\epam\\memory-game\\src\\actions\\actions.ts",["204"],"D:\\projects\\epam\\memory-game\\src\\utils\\useTheme.js",[],{"ruleId":"205","severity":1,"message":"206","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":18},{"ruleId":"205","severity":1,"message":"209","line":1,"column":20,"nodeType":"207","messageId":"208","endLine":1,"endColumn":31},{"ruleId":"205","severity":1,"message":"210","line":3,"column":9,"nodeType":"207","messageId":"208","endLine":3,"endColumn":16},{"ruleId":"205","severity":1,"message":"211","line":5,"column":9,"nodeType":"207","messageId":"208","endLine":5,"endColumn":15},{"ruleId":"205","severity":1,"message":"212","line":6,"column":9,"nodeType":"207","messageId":"208","endLine":6,"endColumn":17},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"205","severity":1,"message":"217","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":19},{"ruleId":"213","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"205","severity":1,"message":"206","line":1,"column":16,"nodeType":"207","messageId":"208","endLine":1,"endColumn":18},{"ruleId":"205","severity":1,"message":"209","line":1,"column":20,"nodeType":"207","messageId":"208","endLine":1,"endColumn":31},{"ruleId":"205","severity":1,"message":"210","line":3,"column":9,"nodeType":"207","messageId":"208","endLine":3,"endColumn":16},{"ruleId":"205","severity":1,"message":"211","line":5,"column":9,"nodeType":"207","messageId":"208","endLine":5,"endColumn":15},{"ruleId":"205","severity":1,"message":"212","line":6,"column":9,"nodeType":"207","messageId":"208","endLine":6,"endColumn":17},{"ruleId":"213","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":2,"column":15,"nodeType":"207","messageId":"208","endLine":2,"endColumn":20},{"ruleId":"205","severity":1,"message":"217","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":19},"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'connect' is defined but never used.","'IState' is defined but never used.","'Dispatch' is defined but never used.","no-native-reassign",["222"],"no-negated-in-lhs",["223"],"'FLIP_CARD' is defined but never used.",["222"],["223"],"no-unused-vars","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]